
gic-action-sheet,scoped
gic-action-sheet,prop,animated,boolean,true,false,false
gic-action-sheet,prop,backdropDismiss,boolean,true,false,false
gic-action-sheet,prop,buttons,(string | ActionSheetButton<any>)[],[],false,false
gic-action-sheet,prop,cssClass,string | string[] | undefined,undefined,false,false
gic-action-sheet,prop,enterAnimation,((baseEl: any, opts?: any) => Animation) | undefined,undefined,false,false
gic-action-sheet,prop,header,string | undefined,undefined,false,false
gic-action-sheet,prop,keyboardClose,boolean,true,false,false
gic-action-sheet,prop,leaveAnimation,((baseEl: any, opts?: any) => Animation) | undefined,undefined,false,false
gic-action-sheet,prop,searchBar,boolean,false,false,false
gic-action-sheet,prop,searchString,null | string | undefined,'',false,false
gic-action-sheet,prop,subHeader,string | undefined,undefined,false,false
gic-action-sheet,prop,translucent,boolean,false,false,false
gic-action-sheet,prop,useVirtualScroll,boolean,false,false,false
gic-action-sheet,method,dismiss,dismiss(data?: any, role?: string | undefined) => Promise<boolean>
gic-action-sheet,method,onDidDismiss,onDidDismiss() => Promise<OverlayEventDetail>
gic-action-sheet,method,onWillDismiss,onWillDismiss() => Promise<OverlayEventDetail>
gic-action-sheet,method,present,present() => Promise<void>
gic-action-sheet,event,ionActionSheetDidDismiss,OverlayEventDetail<any>,true
gic-action-sheet,event,ionActionSheetDidPresent,void,true
gic-action-sheet,event,ionActionSheetWillDismiss,OverlayEventDetail<any>,true
gic-action-sheet,event,ionActionSheetWillPresent,void,true
gic-action-sheet,css-prop,--background
gic-action-sheet,css-prop,--background-activated
gic-action-sheet,css-prop,--background-selected
gic-action-sheet,css-prop,--color
gic-action-sheet,css-prop,--height
gic-action-sheet,css-prop,--max-height
gic-action-sheet,css-prop,--max-width
gic-action-sheet,css-prop,--min-height
gic-action-sheet,css-prop,--min-width
gic-action-sheet,css-prop,--width

gic-alert,scoped
gic-alert,prop,animated,boolean,true,false,false
gic-alert,prop,backdropDismiss,boolean,true,false,false
gic-alert,prop,buttons,(string | AlertButton)[],[],false,false
gic-alert,prop,cssClass,string | string[] | undefined,undefined,false,false
gic-alert,prop,enterAnimation,((baseEl: any, opts?: any) => Animation) | undefined,undefined,false,false
gic-alert,prop,header,string | undefined,undefined,false,false
gic-alert,prop,inputs,AlertInput[],[],false,false
gic-alert,prop,keyboardClose,boolean,true,false,false
gic-alert,prop,leaveAnimation,((baseEl: any, opts?: any) => Animation) | undefined,undefined,false,false
gic-alert,prop,message,string | undefined,undefined,false,false
gic-alert,prop,mode,"ios" | "md",undefined,false,false
gic-alert,prop,searchBar,boolean,false,false,false
gic-alert,prop,searchString,null | string | undefined,'',false,false
gic-alert,prop,subHeader,string | undefined,undefined,false,false
gic-alert,prop,translucent,boolean,false,false,false
gic-alert,prop,useVirtualScroll,boolean,false,false,false
gic-alert,method,dismiss,dismiss(data?: any, role?: string | undefined) => Promise<boolean>
gic-alert,method,onDidDismiss,onDidDismiss() => Promise<OverlayEventDetail>
gic-alert,method,onWillDismiss,onWillDismiss() => Promise<OverlayEventDetail>
gic-alert,method,present,present() => Promise<void>
gic-alert,event,gicAlertDidDismiss,OverlayEventDetail<any>,true
gic-alert,event,gicAlertDidPresent,void,true
gic-alert,event,gicAlertWillDismiss,OverlayEventDetail<any>,true
gic-alert,event,gicAlertWillPresent,void,true
gic-alert,css-prop,--background
gic-alert,css-prop,--height
gic-alert,css-prop,--max-height
gic-alert,css-prop,--max-width
gic-alert,css-prop,--min-height
gic-alert,css-prop,--min-width
gic-alert,css-prop,--width

gic-autocomplete,shadow
gic-autocomplete,prop,interfaceOptions,any,{},false,false
gic-autocomplete,prop,placeholder,string | undefined,undefined,false,false
gic-autocomplete,prop,value,null | string,null,false,false

gic-autocomplete-option,shadow
gic-autocomplete-option,prop,value,any,undefined,false,false

gic-popover,shadow
gic-popover,prop,alignment,"center" | "end" | "start",'start',false,false
gic-popover,prop,animated,boolean,true,false,false
gic-popover,prop,arrow,boolean,true,false,false
gic-popover,prop,backdropDismiss,boolean,true,false,false
gic-popover,prop,component,Function | HTMLElement | null | string | undefined,undefined,false,false
gic-popover,prop,componentProps,undefined | { [key: string]: any; },undefined,false,false
gic-popover,prop,dismissOnSelect,boolean,false,false,false
gic-popover,prop,enterAnimation,((baseEl: any, opts?: any) => Animation) | undefined,undefined,false,false
gic-popover,prop,event,any,undefined,false,false
gic-popover,prop,htmlAttributes,PopoverAttributes | undefined,undefined,false,false
gic-popover,prop,isOpen,boolean,false,false,false
gic-popover,prop,keyboardClose,boolean,true,false,false
gic-popover,prop,leaveAnimation,((baseEl: any, opts?: any) => Animation) | undefined,undefined,false,false
gic-popover,prop,mode,"ios" | "md",undefined,false,false
gic-popover,prop,reference,"event" | "trigger",'trigger',false,false
gic-popover,prop,showBackdrop,boolean,true,false,false
gic-popover,prop,side,"bottom" | "end" | "left" | "right" | "start" | "top",'bottom',false,false
gic-popover,prop,size,"auto" | "cover",'auto',false,false
gic-popover,prop,translucent,boolean,false,false,false
gic-popover,prop,trigger,string | undefined,undefined,false,false
gic-popover,prop,triggerAction,"click" | "context-menu" | "hover",'click',false,false
gic-popover,method,dismiss,dismiss(data?: any, role?: string | undefined, dismissParentPopover?: boolean) => Promise<boolean>
gic-popover,method,onDidDismiss,onDidDismiss<T = any>() => Promise<OverlayEventDetail<T>>
gic-popover,method,onWillDismiss,onWillDismiss<T = any>() => Promise<OverlayEventDetail<T>>
gic-popover,method,present,present(event?: MouseEvent | TouchEvent | PointerEvent | undefined) => Promise<void>
gic-popover,event,didDismiss,OverlayEventDetail<any>,true
gic-popover,event,didPresent,void,true
gic-popover,event,ionPopoverDidDismiss,OverlayEventDetail<any>,true
gic-popover,event,ionPopoverDidPresent,void,true
gic-popover,event,ionPopoverWillDismiss,OverlayEventDetail<any>,true
gic-popover,event,ionPopoverWillPresent,void,true
gic-popover,event,willDismiss,OverlayEventDetail<any>,true
gic-popover,event,willPresent,void,true
gic-popover,css-prop,--background
gic-popover,css-prop,--box-shadow
gic-popover,css-prop,--height
gic-popover,css-prop,--max-height
gic-popover,css-prop,--max-width
gic-popover,css-prop,--min-height
gic-popover,css-prop,--min-width
gic-popover,css-prop,--width
gic-popover,part,arrow
gic-popover,part,backdrop
gic-popover,part,content

gic-select,shadow
gic-select,prop,cancelText,string,'Cancel',false,false
gic-select,prop,compareWith,((currentValue: any, compareValue: any) => boolean) | null | string | undefined,undefined,false,false
gic-select,prop,disabled,boolean,false,false,false
gic-select,prop,interface,"action-sheet" | "alert" | "popover",'alert',false,false
gic-select,prop,interfaceOptions,any,{},false,false
gic-select,prop,multiple,boolean,false,false,false
gic-select,prop,name,string,this.inputId,false,false
gic-select,prop,okText,string,'OK',false,false
gic-select,prop,placeholder,null | string | undefined,undefined,false,false
gic-select,prop,searchBar,boolean,true,false,false
gic-select,prop,selectedText,null | string | undefined,undefined,false,false
gic-select,prop,useVirtualScroll,boolean,true,false,false
gic-select,prop,value,any,undefined,false,false
gic-select,method,open,open(ev?: UIEvent | undefined) => Promise<any>
gic-select,event,ionBlur,void,true
gic-select,event,ionCancel,void,true
gic-select,event,ionChange,SelectChangeEventDetail<any>,true
gic-select,event,ionFocus,void,true
gic-select,css-prop,--padding-bottom
gic-select,css-prop,--padding-end
gic-select,css-prop,--padding-start
gic-select,css-prop,--padding-top
gic-select,part,icon

gic-select-option,shadow
gic-select-option,prop,disabled,boolean,false,false,false
gic-select-option,prop,value,any,undefined,false,false